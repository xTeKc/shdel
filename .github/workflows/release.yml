# Copyright (c) 2022 xTekC.
# SPDX-License-Identifier: MPL-2.0

name: release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: ubuntu-latest
            target: i686-unknown-linux-gnu
          - host: ubuntu-latest
            target: i686-unknown-linux-musl
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - host: ubuntu-latest
            target: aarch64-unknown-linux-musl
          - host: ubuntu-latest
            target: riscv64gc-unknown-linux-gnu
            setup: |
                  sudo apt-get update
                  sudo apt-get install gcc-riscv64-linux-gnu g++-riscv64-linux-gnu -y
          - host: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            setup: |
                  sudo apt-get update
                  sudo apt-get install gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf -y
          - host: macos-latest
            target: x86_64-apple-darwin
          - host: macos-latest
            target: aarch64-apple-darwin

    name: ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          toolchain: stable
          target: ${{ matrix.settings.target }}

      - name: setup system dependencies
        run: ${{ matrix.settings.setup }}
        if: ${{ matrix.settings.setup }}
        shell: bash

      - name: build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: "${{ matrix.settings.target }}"
          path: "target/release/shdel${{ matrix.settings.ext }}"
          if-no-files-found: error

  publish:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: binaries

      - run: ls -R
        working-directory: binaries

      - name: rename files
        working-directory: binaries
        shell: bash
        run: |
          find . -name 'shdel*' -print0 | while read -d '' file
          do
            parent="$(basename $(dirname ${file}))"
            target="${file#./}"
            target="${target/shdel/shdel-${parent}}"
            target="${target/${parent}\//}"
            mv $file $target
          done
          find . -type d -empty -delete

      - run: ls -R 
        working-directory: binaries

      - uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "binaries/*;"
          draft: false
